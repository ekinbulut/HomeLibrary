//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.ServiceModel.Channels;
using System.Threading.Tasks;

namespace Library.Mvc.BookServices {
    [DebuggerStepThrough()]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="BookOutputDto", Namespace="http://schemas.datacontract.org/2004/07/Library.Business.Services.Book.Dtos")]
    [Serializable()]
    public partial class BookOutputDto : object, IExtensibleDataObject, INotifyPropertyChanged {
        
        [NonSerialized()]
        private ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private BookDto[] BooksField;
        
        [Browsable(false)]
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public BookDto[] Books {
            get {
                return this.BooksField;
            }
            set {
                if ((ReferenceEquals(this.BooksField, value) != true)) {
                    this.BooksField = value;
                    this.RaisePropertyChanged("Books");
                }
            }
        }
        
        public event PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="BookDto", Namespace="http://schemas.datacontract.org/2004/07/Library.Business.Services.Book.Dtos")]
    [Serializable()]
    public partial class BookDto : object, IExtensibleDataObject, INotifyPropertyChanged {
        
        [NonSerialized()]
        private ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private string AuthorField;
        
        [OptionalField()]
        private string GenreField;
        
        [OptionalField()]
        private int IdField;
        
        [OptionalField()]
        private string NameField;
        
        [OptionalField()]
        private string NoField;
        
        [OptionalField()]
        private int PublishDateField;
        
        [OptionalField()]
        private string PublisherField;
        
        [OptionalField()]
        private int RackField;
        
        [OptionalField()]
        private string SerieField;
        
        [OptionalField()]
        private string ShelfField;
        
        [OptionalField()]
        private string SkinTypeField;
        
        [Browsable(false)]
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [DataMember()]
        public string Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [DataMember()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [DataMember()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [DataMember()]
        public string No {
            get {
                return this.NoField;
            }
            set {
                if ((ReferenceEquals(this.NoField, value) != true)) {
                    this.NoField = value;
                    this.RaisePropertyChanged("No");
                }
            }
        }
        
        [DataMember()]
        public int PublishDate {
            get {
                return this.PublishDateField;
            }
            set {
                if ((this.PublishDateField.Equals(value) != true)) {
                    this.PublishDateField = value;
                    this.RaisePropertyChanged("PublishDate");
                }
            }
        }
        
        [DataMember()]
        public string Publisher {
            get {
                return this.PublisherField;
            }
            set {
                if ((ReferenceEquals(this.PublisherField, value) != true)) {
                    this.PublisherField = value;
                    this.RaisePropertyChanged("Publisher");
                }
            }
        }
        
        [DataMember()]
        public int Rack {
            get {
                return this.RackField;
            }
            set {
                if ((this.RackField.Equals(value) != true)) {
                    this.RackField = value;
                    this.RaisePropertyChanged("Rack");
                }
            }
        }
        
        [DataMember()]
        public string Serie {
            get {
                return this.SerieField;
            }
            set {
                if ((ReferenceEquals(this.SerieField, value) != true)) {
                    this.SerieField = value;
                    this.RaisePropertyChanged("Serie");
                }
            }
        }
        
        [DataMember()]
        public string Shelf {
            get {
                return this.ShelfField;
            }
            set {
                if ((ReferenceEquals(this.ShelfField, value) != true)) {
                    this.ShelfField = value;
                    this.RaisePropertyChanged("Shelf");
                }
            }
        }
        
        [DataMember()]
        public string SkinType {
            get {
                return this.SkinTypeField;
            }
            set {
                if ((ReferenceEquals(this.SkinTypeField, value) != true)) {
                    this.SkinTypeField = value;
                    this.RaisePropertyChanged("SkinType");
                }
            }
        }
        
        public event PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="BookInputDto", Namespace="http://schemas.datacontract.org/2004/07/Library.Business.Services.Book.Dtos")]
    [Serializable()]
    public partial class BookInputDto : object, IExtensibleDataObject, INotifyPropertyChanged {
        
        [NonSerialized()]
        private ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private int AuthorField;
        
        [OptionalField()]
        private int GenreField;
        
        [OptionalField()]
        private string NameField;
        
        [OptionalField()]
        private string NoField;
        
        [OptionalField()]
        private int PublishDateField;
        
        [OptionalField()]
        private int PublisherField;
        
        [OptionalField()]
        private int RackField;
        
        [OptionalField()]
        private int SerieField;
        
        [OptionalField()]
        private int ShelfField;
        
        [OptionalField()]
        private int SkinTypeField;
        
        [Browsable(false)]
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public int Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((this.AuthorField.Equals(value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [DataMember()]
        public int Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((this.GenreField.Equals(value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [DataMember()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [DataMember()]
        public string No {
            get {
                return this.NoField;
            }
            set {
                if ((ReferenceEquals(this.NoField, value) != true)) {
                    this.NoField = value;
                    this.RaisePropertyChanged("No");
                }
            }
        }
        
        [DataMember()]
        public int PublishDate {
            get {
                return this.PublishDateField;
            }
            set {
                if ((this.PublishDateField.Equals(value) != true)) {
                    this.PublishDateField = value;
                    this.RaisePropertyChanged("PublishDate");
                }
            }
        }
        
        [DataMember()]
        public int Publisher {
            get {
                return this.PublisherField;
            }
            set {
                if ((this.PublisherField.Equals(value) != true)) {
                    this.PublisherField = value;
                    this.RaisePropertyChanged("Publisher");
                }
            }
        }
        
        [DataMember()]
        public int Rack {
            get {
                return this.RackField;
            }
            set {
                if ((this.RackField.Equals(value) != true)) {
                    this.RackField = value;
                    this.RaisePropertyChanged("Rack");
                }
            }
        }
        
        [DataMember()]
        public int Serie {
            get {
                return this.SerieField;
            }
            set {
                if ((this.SerieField.Equals(value) != true)) {
                    this.SerieField = value;
                    this.RaisePropertyChanged("Serie");
                }
            }
        }
        
        [DataMember()]
        public int Shelf {
            get {
                return this.ShelfField;
            }
            set {
                if ((this.ShelfField.Equals(value) != true)) {
                    this.ShelfField = value;
                    this.RaisePropertyChanged("Shelf");
                }
            }
        }
        
        [DataMember()]
        public int SkinType {
            get {
                return this.SkinTypeField;
            }
            set {
                if ((this.SkinTypeField.Equals(value) != true)) {
                    this.SkinTypeField = value;
                    this.RaisePropertyChanged("SkinType");
                }
            }
        }
        
        public event PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [ServiceContract(Namespace="com.sense.services.Services", ConfigurationName="BookServices.BookService")]
    public interface BookService {
        
        [OperationContract(Action="com.sense.services.Services/BookService/GetBookList", ReplyAction="com.sense.services.Services/BookService/GetBookListResponse")]
        BookOutputDto GetBookList();
        
        [OperationContract(Action="com.sense.services.Services/BookService/GetBookList", ReplyAction="com.sense.services.Services/BookService/GetBookListResponse")]
        Task<BookOutputDto> GetBookListAsync();
        
        [OperationContract(Action="com.sense.services.Services/BookService/AddBook", ReplyAction="com.sense.services.Services/BookService/AddBookResponse")]
        bool AddBook(BookInputDto input);
        
        [OperationContract(Action="com.sense.services.Services/BookService/AddBook", ReplyAction="com.sense.services.Services/BookService/AddBookResponse")]
        Task<bool> AddBookAsync(BookInputDto input);
        
        [OperationContract(Action="com.sense.services.Services/BookService/UpdateBook", ReplyAction="com.sense.services.Services/BookService/UpdateBookResponse")]
        bool UpdateBook(BookDto input);
        
        [OperationContract(Action="com.sense.services.Services/BookService/UpdateBook", ReplyAction="com.sense.services.Services/BookService/UpdateBookResponse")]
        Task<bool> UpdateBookAsync(BookDto input);
    }
    
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public interface BookServiceChannel : BookService, IClientChannel {
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public partial class BookServiceClient : ClientBase<BookService>, BookService {
        
        public BookServiceClient() {
        }
        
        public BookServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BookServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookServiceClient(string endpointConfigurationName, EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookServiceClient(Binding binding, EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BookOutputDto GetBookList() {
            return base.Channel.GetBookList();
        }
        
        public Task<BookOutputDto> GetBookListAsync() {
            return base.Channel.GetBookListAsync();
        }
        
        public bool AddBook(BookInputDto input) {
            return base.Channel.AddBook(input);
        }
        
        public Task<bool> AddBookAsync(BookInputDto input) {
            return base.Channel.AddBookAsync(input);
        }
        
        public bool UpdateBook(BookDto input) {
            return base.Channel.UpdateBook(input);
        }
        
        public Task<bool> UpdateBookAsync(BookDto input) {
            return base.Channel.UpdateBookAsync(input);
        }
    }
}
