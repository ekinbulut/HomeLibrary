@using Library.Mvc.Helpers
@using Library.Mvc.Providers
@model Library.Mvc.Models.UserModel


@section breadcrumb{

    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index","Home")"><i class="fa fa-dashboard"></i>Home</a></li>
        <li><a href="#">Layout</a></li>
        <li class="active">Edit Record</li>
    </ol>
}

@section userpanel{
    <ul class="nav navbar-nav">
        <!-- User Account Menu -->
        <li class="dropdown user user-menu">
            <!-- Menu Toggle Button -->
            <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                <!-- The user image in the navbar-->
                @if (Model.Gender.Equals("Male"))
                {
                    <img src="~/dist/img/avatar04.png" class="user-image" alt="User Image">

                }
                else
                {
                    <img src="~/dist/img/avatar03.png" class="user-image" alt="User Image">
                }
                <!-- hidden-xs hides the username on small devices so only the image appears. -->
                @*<span class="hidden-xs">Test User</span>*@
                @Html.SpanFor(x => x.Name, new { @class = "hidden-xs" })
            </a>
            <ul class="dropdown-menu">
                <!-- The user image in the menu -->
                <li class="user-header">
                    <img src="~/dist/img/avatar04.png" class="img-circle" alt="User Image">
                    <p>
                        @Model.Name - @Model.Occupation
                        <small>Member since @Model.LastLoginDate.Value.ToString("M")</small>
                    </p>
                </li>
                <!-- Menu Body -->
                @*<li class="user-body">
                        <div class="row">
                            <div class="col-xs-4 text-center">
                                <a href="#">Followers</a>
                            </div>
                            <div class="col-xs-4 text-center">
                                <a href="#">Sales</a>
                            </div>
                            <div class="col-xs-4 text-center">
                                <a href="#">Friends</a>
                            </div>
                        </div>
                    </li>*@
                <!-- Menu Footer-->
                <li class="user-footer">
                    @*<div class="pull-left">
                            <a href="#" class="btn btn-default btn-flat">Profile</a>
                        </div>*@
                    <div class="pull-right">
                        <a href="@Url.Action("Logout","Authentication")" class="btn btn-default btn-flat">Sign out</a>
                    </div>
                </li>
            </ul>
        </li>
    </ul>
}
<div class="box-header">
    @*<h3 class="box-title">Add Book</h3>*@
</div>
<div class="box-body">
    @using (Html.BeginForm("EditBookRecord", "Home", FormMethod.Post, htmlAttributes: new { role = "form" }))
    {
        @Html.HiddenFor(x=>x.BookDto.Id);

        <div class="form-group">
            @Html.LabelFor(x => x.BookDto.Name)
            @Html.EditorFor(x => x.BookDto.Name, Model.BookDto.Name, new { htmlAttributes = new { @class = "form-control" } })
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.BookDto.Author)
            @Html.DropDownListFor(x => x.BookDto.Author, ItemProvider.Authors(), Model.BookDto.Author, htmlAttributes: new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.BookDto.Publisher)
            @Html.DropDownListFor(x => x.BookDto.Publisher, ItemProvider.Publishers(), Model.BookDto.Publisher,htmlAttributes: new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.BookDto.Serie)
            @Html.DropDownListFor(x => x.BookDto.Serie, ItemProvider.Series(), Model.BookDto.Serie, htmlAttributes: new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.BookDto.PublishDate)
            @Html.EditorFor(x => x.BookDto.PublishDate, Model.BookDto.PublishDate.ToString(), new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.BookDto.Genre)
            @Html.DropDownListFor(x => x.BookDto.Genre, ItemProvider.Genres(), Model.BookDto.Genre, htmlAttributes: new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.BookDto.No)
            @Html.EditorFor(x => x.BookDto.No, Model.BookDto.No, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.BookDto.SkinType)
            @Html.DropDownListFor(x => x.BookDto.SkinType, ItemProvider.SkinTypes(), Model.BookDto.SkinType,htmlAttributes: new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.BookDto.Shelf)
            @Html.DropDownListFor(x => x.BookDto.Shelf, ItemProvider.Shelfs(), Model.BookDto.Shelf,htmlAttributes: new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.BookDto.Rack)
            @Html.DropDownListFor(x => x.BookDto.Rack, ItemProvider.Racks(), Model.BookDto.Rack.ToString(),htmlAttributes: new { @class = "form-control" })
        </div>

        <div class="form-group">
            <input type="submit" value="Update" class="btn btn-primary" />
        </div>

    }
</div>


